<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAWISURBVFhHtZd/
        UJN1HMd31l3WWZf1R13mj7TLsj/CUopEGQ+yORAD8dGcuI2NsbExcD9YAxQefoT4a4pzHaYwMM0OYRA/
        JgyDLBXEH9X146w7z66jyxM1I7VLaJ++34e+D9t8lPDGHy/u2ed57/t+7WHP8+wRAMAInmoK0Y64AJ6q
        DdDNPMztewBomn4oodxoX1eS2RCzxRzLl8GMbHQ7p6DiPxDAcdRFB4f/LxF246OLttsGn3e+D5iZe0oh
        jdHa+LIjG56qdQHlI7QEh8ciUmqiI6Xm2wt1tiFSjplXwUC5dd05vveMbLQcmIEKhwME2lym4PBYCOmc
        ZxevNZXFZWWfFW00g3ijCZSFGZDOaCG1KGNQwNz9bx194akuQAwifIh2aD001T84Hloz4qd6NaLbCCB0
        aEUMXzZw8GnV49BaPTtg9oAcU4uXdmhER73pol+9GnGBxyB5gi/H/lE3QZK60ddX4bl8a1vrwJ9pjXAx
        rQlKGQYmBb9hPNBG46NJFsN7VJ6lL7wo92pMvuVMcEagcMFkVHhte9sVsHUBi7PjN0AzUDVAvH+4tzar
        uNdlaMccs8svtm+RDmA+d6adZ+c12Z7eWsMqnJXkGg/P3FUCEscmSKgtB8pRwH4hqXzzaf81BUo3vIbL
        mJYbkNvl4yQc3iuQ0TS0jQTPVGXP7a3JAoJ3awq0FtMs3Q4VN0eSP+P8nB3FvghHIUTW74EI9weQXFnI
        CrxSXjhE1sQI1I0QhgUwO9BR2Ng1zApgmVOek/3gqZmDzohlt5ud9gH3driCOHfAfG+BmqzLeOG5O4sg
        7uA2tjzqyG543cGwAtMdpUDrdFN4BTBlrdegsOsOfOHt878mBNB/pGxMgQKLbNhiN8HbDU5I2LOJuyZg
        Eq1Zm+4pgClovgG/t33CW/53SyV8d8gGX1Zq2OLuilQ4vlUGJ+xKOLFLBScq0q53asVqcvrlFaoDyjFU
        vuX8fQUw1qab8HVbZx8crTqAiq3Xm3bqz6ND7/dJWbpyV3LnejBH9MvhZXQVDBaYX5J/c0wBjMoN5STY
        59oQFlyOOV4qBa/27vIOjXhQstl8Vzlmtr3EFzIBlmoD9OzXQ8+HOuip1A4c00jmdSuET760lfmHTwCz
        1qyLDJ1AIOyXEBPO5A3wlWPibMa6cQn07st+Bi0+FFTGg4G764lyzV6+8lk7S0BkNf3ACqjq78znK8fI
        XFdryGIYVPBGj8uguBena7Jlp2qN00ieNmWuwef9i5sZeNWWB28ZcnwRihxAt2zQy1LZtQUUbQ+nZE7A
        xCj3X0q0tn8crzkEmDj1R06y2INgWENnLkpSQ2RiGgsl3eDD5Rhrqoy9ZAsWCnVhC5bogSVKf4GKLyqP
        ji8GDN4OXnQ8JK1cP0jKV6+WD5DyaKkRdhskj+DMhAnoVq8qJuWLEZoURTMRSF6vGyS5CREQol8+y5Pl
        fxGB9fTaH5Uy9VkioJKpvyLZCRHYlyJOzV6zCpatVEBUogos7ya/qZSnX34nJRMwOXK5nWQnRKBBLjyM
        gHrE7hTJQTxDV8efRq+UsTEkO1EC/VgA406lKDzr1IgOjgqIykg25AKNCuEsUo6405Ke8Bied6aLpUSg
        I130DcmHXKBeJkzhBBTCXjJvV4mfQuXDnIRONB3PQy7QII/aSwTQd4D7SYdBd82TRMCrjdXgWcgF3PKo
        77kjII9e4b+vUyvK5wQ0omY8C6mAWxbzNCr2/Sfgw6/993vVsWF+ArfQLXuyIHxJ5gucwBL9aSqu2EYE
        opeX5PovMBZ1yui5o59e+C1fBhX3E4nPtNQ0doiK9yJ+WbA4Mzl2BfNcdHzRGSRwdmkCMyN4gftRhx7J
        0WGvQ+WX3Ioo3kdydAYkovJL6GnJxTDMpH8BUDVRF2se+i8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="medicine_id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="medicine_name.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="medicine_description.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="qty.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDel.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        pgAAAKYB3X3/OAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJtSURBVEhLrdb/
        axJxHMfxoy+/9AfkchRB9VtQECOmtzl/GeyX/XZayyFFsp/6peiHICI2G4u1fpBqJyMcFaMZzdpio0Eb
        w1ADF2q6/DbBiQ7aDzcdTXFt7+4O7uZHP/dl0Q8P0IN7PTnxTgkAQOTz+SEWSEkkErzSdJ8X3MTh+vPr
        NRwoFAoB3LBACFRfkdVd+uwbpUjDAbWBymsD7DnPgFKk4cBBA0oR8cUV6lqPibLMB4PLW7hhwX6gQwxw
        vPfPb7TrjN9IXcc82WrsQQIU1WswUxbg+Hx+7LBACOT8E7D5sU/EeGyw4HoApM7Ia2s1GsSA2dTrOGgA
        JxqNigG9zuioCVjo/x0g9UaaDxAP4VDbvbG5FvsUtNg9YJvNwB3vhiRyvCRJ7yrCqf4Y79zdT8vs9hGi
        +S0z0jzJgFrHH/9RrclRCRLsSUz9iBzckKThnT0uwJ94+h0Do9/L4IlVoGuu1DAswA7JEAMnWQOB3/Ay
        VAZyptgwLMCNyBEDauFG5OxfwcQv6Lw1CN03bssyGLpktXea4MSjYmOAw31V+5864fkzWtJ1601JVqsN
        Ll8dwF+B4HN8HbmxcrkcYiW2gojH4+KNFvm5iowrBhYXvTD1fgYxPORAjNHj/x5Ip1chFIogpj/MIny+
        gELAzYSlAtlslj0xiVhir6pWKBTmx3EBzUi1TGjdTLd2cnMdF1j4sqT4EdEvXPjAk51dzWjZzj9NLznh
        KPtMusBezcV0rhARAmvZNUgl04ivXh8iHP4hBuLJdFlDb5ubnNuU1gnHxMd1LbU/mTipVGqrfg95w2FH
        VP1twclkMn50D4i/uF+dJGPki4YAAAAASUVORK5CYII=
</value>
  </data>
</root>